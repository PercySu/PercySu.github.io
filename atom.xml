<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>此心光明，亦复何言？</title>
  
  <subtitle>何不如笑傲风月，踏三山，伴红颜，此生无憾！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://percysu.com/"/>
  <updated>2018-10-24T12:42:28.962Z</updated>
  <id>http://percysu.com/</id>
  
  <author>
    <name>PercySu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于时间</title>
    <link href="http://percysu.com/2018/10/22/Time/"/>
    <id>http://percysu.com/2018/10/22/Time/</id>
    <published>2018-10-21T17:49:34.000Z</published>
    <updated>2018-10-24T12:42:28.962Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇感悟是我两年前发布于“平行世界”上的，现在写下来，审视下自己是否进行了更深层的思考。</p></blockquote><p>现在时间2016年12月9日1:11，我已经20岁了。20年，或许对于人，对于猫，对于狗而言，这都是一个跨度非常大的时间段。一个人能有多少个20年，而20年，对于猫狗而言很可能是它的这一辈子还要加上下一辈子才有可能经历的年限。对于相较于生物来说永亘的宇宙而言，20年实在是不值一提，或许只有亿年才配作为它的时间尺度。一个人的一生，60年，70年，相对于宇宙来说只是一瞬而已。但是这个人的一生，经历了辉煌与沧桑。<br><a id="more"></a><br>同样地，或许我们所在的这个空间，可能是宇宙，也可能是我们的宇宙与其他的平行宇宙共处的空间，只是另一个更庞然大物的一瞬间所存在的东西而已，或许我们的空间是某个巨人的一个小细胞？还是一个被外界庞然大物们研究所创立的微小空间？我们的时间对他们不值一提，或许连一瞬都没有？打个比方，一个CPU假如主频1GHz，1S可以有10e9个脉冲，1S对于我们而言或许很短。但是，假如在一个脉冲里，一个电子即为一个宇宙，而这个宇宙中存在着生命，在这一个脉冲中，这个宇宙可以无数次生灭，那其中的生命的时间尺度对我们而言已经小得不可估计了。但我们又何必沾沾自喜，我们或许也是那可怜的生物，我们的时间只是外面世界中的一瞬而已，也许外面世界的1s，我们的宇宙已经破灭又生成了数亿次。也许对于有些生物而言，1S就是一个无穷大的时间了，它们的生命周期只有1S的几亿分之一而已。所以，时间这个尺度并不是标准的，对于我们人而言，年，算是很大的时间计量单位了，但对于庞然大物们而言，1S就有我们宇宙的无数次生灭，一个人的生命，它们实在不知如何表示。</p><p>思想是个好东西，或许你的肉身，你的灵魂不能让你探清真相，你或许不能证明庞然大物们的存在，但是你可以通过思想无限地发散，你可以想象它们，你可以通过思想造访外面的世界，人的肉身有限，但思想无限。</p><p>补充：其实现在我对于平行世界的存在，持有怀疑的态度。假定平行世界真的存在，那它就是我们这个世界的不同种可能。我们把时间间隔设为1S，在这1S内，在这个世界，就算只有一个东西改变了，就会出现分支，会产生另外的平行宇宙。之后其他的变量也变得不可控，会产生更多的分支，更何况，在这个时间段内会有无数个事物改变，那么会产生多少个世界。再把时间推移到更早的时候，从古至今，在任一时间点，某个东西改变，就会产生平行世界吗？那它们的产生消耗的是什么呢，什么能量能支撑这种消耗。把我们比作小船，在海上一直前行，无时无刻不从我们身上分出其他的小小船，那就是不同的可能，那我们为什么就不是被分出来的呢？我的理解是我们确实是被分出来的，但是每个小船肯定都要有一个终点，不管从我们身上分出去多少，我们一直在前行，在往终点航行，我们自身是不会改变的，类比于图中的一条路径，我们的命运是既定的。但是也有可能并不是这样产生平行世界，这毕竟只是产生的路径而已，不一定每条路径都一定产生一个世界。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇感悟是我两年前发布于“平行世界”上的，现在写下来，审视下自己是否进行了更深层的思考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在时间2016年12月9日1:11，我已经20岁了。20年，或许对于人，对于猫，对于狗而言，这都是一个跨度非常大的时间段。一个人能有多少个20年，而20年，对于猫狗而言很可能是它的这一辈子还要加上下一辈子才有可能经历的年限。对于相较于生物来说永亘的宇宙而言，20年实在是不值一提，或许只有亿年才配作为它的时间尺度。一个人的一生，60年，70年，相对于宇宙来说只是一瞬而已。但是这个人的一生，经历了辉煌与沧桑。&lt;br&gt;
    
    </summary>
    
      <category term="notes" scheme="http://percysu.com/categories/notes/"/>
    
    
      <category term="感悟" scheme="http://percysu.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>V2Ray,新一代科学上网神器</title>
    <link href="http://percysu.com/2018/08/10/V2Ray/"/>
    <id>http://percysu.com/2018/08/10/V2Ray/</id>
    <published>2018-08-09T19:10:25.000Z</published>
    <updated>2018-10-22T18:39:42.044Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前两天，我的酸酸乳(SSR)服务器被墙了，于是我查询资料在VPS上搭建了<code>V2Ray</code>平台来科学上网。V2Ray更像是一个工具箱，集成了多种多样的协议和功能：</p></blockquote><ul><li><strong>更完善的协议</strong>：V2Ray 使用了新的自行研发的 VMess 协议，改正了 Shadowsocks一些已有的缺点，更难被墙检测到；</li><li><strong>更强大的性能</strong>: 网络性能更好，具体数据可以看 V2Ray <a href="https://steemit.com/cn/@v2ray/3cjiux" target="_blank" rel="noopener">官方博客</a></li><li><strong>更丰富的功能</strong>：以下是部分V2Ray的功能：<ul><li>mKCP:KCP 协议在 V2Ray 上的实现，不必另行安装 kcptun</li><li>动态端口：动态改变通信的端口，对抗对长时间大流量端口的限速封锁</li><li>路由功能：可以随意设定指定数据包的流向，去广告、反跟踪都可以</li><li>传出代理：看名字可能不太好理解，其实差不多可以称之为多重代理。类似于 Tor 的代理</li><li>数据包伪装：类似于 Shadowsocks-rss 的混淆，另外对于 mKCP 的数据包也可伪装，伪装常见流量，令识别更困难</li><li>WebSocket 协议：可以 PaaS 平台搭建V2Ray，通过 WebSocket 代理。也可以通过它使用 CDN 中转，抗封锁效果更好</li><li>Mux:多路复用，进一步提高科学上网的并发性能<a id="more"></a></li></ul></li></ul><h1 id="总述"><a href="#总述" class="headerlink" title="总述"></a>总述</h1><p>我只是实现了V2Ray的一些简单功能，有：VMess协议，Shadowsocks协议，mKCP，Mux和国内直连。想要了解更多，可以参考：<a href="https://toutyrater.github.io/" target="_blank" rel="noopener">点我</a>。</p><h1 id="配置V2Ray"><a href="#配置V2Ray" class="headerlink" title="配置V2Ray"></a>配置V2Ray</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>从软件上，V2Ray不区分服务器版和客户端版，也就是说客户端和服务器运行的V2Ray其实是一个软件，区别在于它们的配置文件不同，其实就是客户端的config.json和服务器的config.json里面的内容不同罢了。我这里客户端为PC（Windows），服务器端为Linux。</p><h2 id="Linux版本"><a href="#Linux版本" class="headerlink" title="Linux版本"></a>Linux版本</h2><p>VPS系统建议选择<code>Debian 8.x及以上</code>或者<code>Ubuntu 16.04及以上</code>。我用的是Vultr + Debian 8 x64 + Los Angeles 。VPS服务器购买参见我的另一篇文章<a href="http://percysu.com/2018/03/12/Sixth_Article/">搭建SSR服务器附带锐速加速</a>。</p><h2 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h2><p>点<a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">这里</a>下载V2Ray的Windows压缩包，根据电脑系统位数选择<code>v2ray-windows-32.zip</code>或<code>v2ray-windows-64.zip</code>。下载解压，会有两个重要文件：<br><strong>①config.json</strong>：它就是客户端配置文件，等会就是将它的内容进行改写。<br><strong>②v2ray.exe</strong>：是一个命令行程序，启动后可以看到命令行界面。（相似的有：wv2ray.exe 是一个后台程序，没有界面，会在后台自动运行。）<br>至此，客户端安装好了，我们需要对config.json进行改写，我放在后面写。</p><h2 id="服务器安装"><a href="#服务器安装" class="headerlink" title="服务器安装"></a>服务器安装</h2><h3 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h3><p>现在有大神做的一键脚本：<a href="https://233blog.com/post/17/" target="_blank" rel="noopener">一键脚本</a>，但我没用过，你可以试一试。我还是按官方提供的脚本安装的，通过XShell用SSH登录进你的VPS后，操作如下：<br>1.下载脚本<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://install.direct/go.sh</span><br></pre></td></tr></table></figure></p><p>2.执行脚本安装V2Ray<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash go.sh</span><br></pre></td></tr></table></figure></p><p>当显示:</p><blockquote><p>V2Ray v3.34(版本号) is installed.</p></blockquote><p>表明安装成功。<br>在首次安装完成之后，<strong>V2Ray 不会自动启动</strong>，需要手动运行启动命令（你可以在修改完配置文件之后启动）。<br>V2ray的常用命令：</p><ul><li><p>启动V2Ray：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start v2ray</span><br></pre></td></tr></table></figure></li><li><p>停止V2Ray：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop v2ray</span><br></pre></td></tr></table></figure></li><li><p>重启V2Ray：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart v2ray</span><br></pre></td></tr></table></figure></li></ul><p>下面我们就该修改配置文件了：<font color="#0099ff">（注意：每次修改完配置文件都需要重启V2Ray服务）</font>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p><p>下面是我的服务器端配置和客户端配置。</p><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><p><strong>config.json</strong>(服务器)<br><figure class="highlight"><figcaption><span>/etc/v2ray/config.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"log"</span>: &#123;</span><br><span class="line"><span class="attr">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line"><span class="attr">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line"><span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"inbound"</span>: &#123;</span><br><span class="line">"port": 1234,   //vmess协议的端口号，自己选择，但是客户端和服务器要相同</span><br><span class="line">"protocol": "vmess",</span><br><span class="line">"settings": &#123;</span><br><span class="line">"clients": [&#123;</span><br><span class="line">"id": "e685a7a0-8789-4595-9d17-f7b231f4abff",   //相当于SSR中的密码，服务器和客户端要相同,通过（https://www.uuidgenerator.net/）生成</span><br><span class="line">"alterId": 77   //自己选择，服务器和客户端相同</span><br><span class="line">&#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        "streamSettings":&#123;      //mkcp加速</span><br><span class="line">            "network":"mkcp",</span><br><span class="line">            "kcpSettings":&#123;</span><br><span class="line">              "mtu":1350,</span><br><span class="line">              "tti":20,</span><br><span class="line">              "uplinkCapacity":10,</span><br><span class="line">              "downlinkCapacity":100,</span><br><span class="line">              "congestion":false,</span><br><span class="line">              "readBufferSize":1,</span><br><span class="line">              "writeBufferSize":1,</span><br><span class="line">              "header":&#123;</span><br><span class="line">                "type":"none"</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">&#125;,</span><br><span class="line">"inboundDetour": [&#123;                 //shadowsocks协议部分，我这里部署了两个端口都是ss协议，你可以不部署</span><br><span class="line">"protocol": "shadowsocks",</span><br><span class="line">"port": 5555,       //端口号自己选择</span><br><span class="line">"settings": &#123;</span><br><span class="line">"method": "aes-256-gcm",  //协议自己选择      </span><br><span class="line">            "password": "????????",          //密码自己设定</span><br><span class="line">            "udp":true</span><br><span class="line">&#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">"protocol": "shadowsocks",</span><br><span class="line">"port": 6666,                       //端口号自己选择</span><br><span class="line">"settings": &#123;</span><br><span class="line">"method": "chacha20-ietf",          //协议自己选择</span><br><span class="line">            "password": "????????",       //密码自己设定</span><br><span class="line">            "udp":true</span><br><span class="line">&#125;</span><br><span class="line">&#125;],</span><br><span class="line">"outbound": &#123;</span><br><span class="line">"protocol": "freedom",</span><br><span class="line">"settings": &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后检查一下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/v2ray/v2ray -test -config /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p><p>如果显示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">An unified platform for anti-censorship.</span><br><span class="line">Configuration OK.</span><br></pre></td></tr></table></figure></p><p>表明配置文件没问题,启动（重启）v2ray服务。</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>客户端上的json文件你可以在<strong>Atom</strong>或者<strong>VSCode</strong>或其他编辑器上改写，提高效率，记事本真的不方便。<br><figure class="highlight"><figcaption><span>/v2ray-v3.34-windows-64/config.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"inbound"</span>: &#123;</span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    "port": 1081,       //监听端口</span><br><span class="line">    "protocol": "socks",</span><br><span class="line">    "domainOverride":["tls","http"],</span><br><span class="line">    "settings": &#123;</span><br><span class="line">      "auth": "noauth",</span><br><span class="line">      "udp": true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "outbound": &#123;</span><br><span class="line">    "protocol": "vmess",</span><br><span class="line">    "settings": &#123;</span><br><span class="line">      "vnext":[</span><br><span class="line">        &#123;</span><br><span class="line">          "address":"??.??.??.??",        //你的VPS的ip</span><br><span class="line">          "port":"1234",        //和服务器的端口号对应</span><br><span class="line">          "users":[</span><br><span class="line">            &#123;</span><br><span class="line">              "id":"e685a7a0-8789-4595-9d17-f7b231f4abff",      //和服务器的id要对应</span><br><span class="line">              "level":1,</span><br><span class="line">              "alterId":77              //和服务器的要对应</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    "streamSettings":&#123;</span><br><span class="line">      "network":"mkcp",</span><br><span class="line">      "kcpSettings":&#123;</span><br><span class="line">        "mtu":1350,</span><br><span class="line">        "tti":20,</span><br><span class="line">        "uplinkCapacity":10,</span><br><span class="line">        "downlinkCapacity":100,</span><br><span class="line">        "congesion":false,</span><br><span class="line">        "readBufferSize":1,</span><br><span class="line">        "writeBufferSize":1,</span><br><span class="line">        "header":&#123;</span><br><span class="line">          "type":"none"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "mux": &#123;"enabled": true&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "outboundDetour":[</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "routing": &#123;</span><br><span class="line">    "strategy": "rules",</span><br><span class="line">    "settings": &#123;</span><br><span class="line">        "rules": [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                <span class="attr">"port"</span>: <span class="string">"54-79"</span>,</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                <span class="attr">"port"</span>: <span class="string">"81-442"</span>,</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                <span class="attr">"port"</span>: <span class="string">"444-65535"</span>,</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                <span class="attr">"domain"</span>: [</span><br><span class="line">                    <span class="string">"gc.kis.scr.kaspersky-labs.com"</span></span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"chinasites"</span>,</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: [</span><br><span class="line">                    <span class="string">"0.0.0.0/8"</span>,</span><br><span class="line">                    <span class="string">"10.0.0.0/8"</span>,</span><br><span class="line">                    <span class="string">"100.64.0.0/10"</span>,</span><br><span class="line">                    <span class="string">"127.0.0.0/8"</span>,</span><br><span class="line">                    <span class="string">"169.254.0.0/16"</span>,</span><br><span class="line">                    <span class="string">"172.16.0.0/12"</span>,</span><br><span class="line">                    <span class="string">"192.0.0.0/24"</span>,</span><br><span class="line">                    <span class="string">"192.0.2.0/24"</span>,</span><br><span class="line">                    <span class="string">"192.168.0.0/16"</span>,</span><br><span class="line">                    <span class="string">"198.18.0.0/15"</span>,</span><br><span class="line">                    <span class="string">"198.51.100.0/24"</span>,</span><br><span class="line">                    <span class="string">"203.0.113.0/24"</span>,</span><br><span class="line">                    <span class="string">"::1/128"</span>,</span><br><span class="line">                    <span class="string">"fc00::/7"</span>,</span><br><span class="line">                    <span class="string">"fe80::/10"</span></span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"chinaip"</span>,</span><br><span class="line">                <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后运行，<strong>v2ray.exe</strong>,如果出现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">V2Ray v3.34 (die Commanderin) 20180806</span><br><span class="line">A unified platform for anti-censorship.</span><br><span class="line">2018/08/10 02:21:29 [Warning] Core: V2Ray v3.34 started</span><br></pre></td></tr></table></figure></p><p>表明配置成功，服务启动，你每次用的话都要启动该程序，且不能关闭，用最小化它在后台运行即可。</p><h1 id="服务器端json上传"><a href="#服务器端json上传" class="headerlink" title="服务器端json上传"></a>服务器端json上传</h1><p>如果你在VPS上Vim编写服务器端的config.json文件不熟练，可以在Windows下写好后上传到VPS上。下面说下利用Linux自带的软件lrzsz上传文件。</p><h2 id="lrzsz安装"><a href="#lrzsz安装" class="headerlink" title="lrzsz安装"></a>lrzsz安装</h2><p>1.CentOS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install lrzsz -y</span><br></pre></td></tr></table></figure></p><p>2.Debian<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y</span><br><span class="line">apt-get install lrzsz -y</span><br></pre></td></tr></table></figure></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>1.上传<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure></p><p>2.下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sz 需要下载文件名</span><br></pre></td></tr></table></figure></p><h2 id="具体操作-Debian8"><a href="#具体操作-Debian8" class="headerlink" title="具体操作(Debian8)"></a>具体操作(Debian8)</h2><h3 id="安装lrzsz"><a href="#安装lrzsz" class="headerlink" title="安装lrzsz"></a>安装lrzsz</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y</span><br><span class="line">apt-get install lrzsz -y</span><br></pre></td></tr></table></figure><h3 id="上传config-json"><a href="#上传config-json" class="headerlink" title="上传config.json"></a>上传config.json</h3><p>将写好的config.json文件放在桌面，在VPS上输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure></p><p>选中该文件即可。</p><h3 id="覆盖原始文件"><a href="#覆盖原始文件" class="headerlink" title="覆盖原始文件"></a>覆盖原始文件</h3><p>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure></p><p>命令看是否下载成功，成功的话，输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv config.json /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p><p>成功。当然了你也可以使用其他的方式，WinSCP，FTP，Http……</p><h1 id="锐速加速"><a href="#锐速加速" class="headerlink" title="锐速加速"></a>锐速加速</h1><p>如果你部署了SS服务，可以使用锐速加速，Debian 8适配的内核是3.16.0-<strong>4</strong>-amd64，而vultr的默认版本是3.16.0-<strong>6</strong>-amd64，但是我们发现，它也存在3.16.0-4-amd64版本，我们所做的就是删除3.16.0-6-amd64版本的内核。但是如果你没有3.16.0-<strong>4</strong>-amd64版本的内核，就需要下载安装：</p><h2 id="查看内核"><a href="#查看内核" class="headerlink" title="查看内核"></a>查看内核</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l|grep linux-image</span><br></pre></td></tr></table></figure><p><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-10-19_02-47-12.png" alt=""><br>我们发现存在两个版本的内核，3.16.0-4-amd64和3.16.0-6-amd64,我们删除掉3.16.0-6-amd64内核，直接看第三步；如果你没有3.16.0-4-amd64，看第二步。</p><h2 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h2><p>1.下载3.16.0.4-deb内核<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://security-cdn.debian.org/pool/updates/main/l/linux/linux-image-3.16.0-4-amd64_3.16.43-2+deb8u5_amd64.deb</span><br></pre></td></tr></table></figure></p><p>2.安装3.16.0-4内核<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i linux-image-3.16.0-4*.deb</span><br></pre></td></tr></table></figure></p><h2 id="删除内核"><a href="#删除内核" class="headerlink" title="删除内核"></a>删除内核</h2><p>1.先查看所有内核版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l|grep linux-image</span><br></pre></td></tr></table></figure></p><p>2.删除掉所有非3.16.0.4版本的内核</p><p>通过上图我们发现我们需要删除的就一个3.16.0-6版本的内核，如果有其他的也删除掉。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y remove linux-image-3.16.0-6-amd64</span><br></pre></td></tr></table></figure></p><p>在删除时，会有个选项,询问你是否终止删除内核，选择<strong>No</strong>!<br><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-10-19_02-47-55.png" alt=""></p><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="安装锐速"><a href="#安装锐速" class="headerlink" title="安装锐速"></a>安装锐速</h2><p>重新连接VPS，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure></p><h1 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>可以使用自带客户端v2ray.exe + Chrome上的<a href="https://www.switchyomega.com/download/" target="_blank" rel="noopener">SwitchyOmega</a>插件。具体步骤参考：<a href="https://blog.csdn.net/hpf247/article/details/79534979" target="_blank" rel="noopener">SwitchyOmega+v2ray</a></p><p><a href="https://github.com/2dust/v2rayN/releases/tag/2.13" target="_blank" rel="noopener">V2RayN</a>（推荐，很方便）</p><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><p>参考：（<a href="https://233blog.com/post/25/）" target="_blank" rel="noopener">https://233blog.com/post/25/）</a></p><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p><a href="https://apkpure.com/cn/bifrostv/com.github.dawndiy.bifrostv" target="_blank" rel="noopener">BifrostV</a></p><p>Google Play 搜索“v2rayNG” （推荐）</p><h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><p>美区：Shadowrocket,Kitsunebi(已下架),Pepi<br>IOS端目前没有很好用的app，唯一好用的kitsunebi下架了，shadowrocket支持vmess协议但却不支持kcp。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://toutyrater.github.io/prep/install.html" target="_blank" rel="noopener">详细教程</a><br><a href="https://yuan.ga/v2ray-complete-tutorial/" target="_blank" rel="noopener">教程2</a><br><a href="https://233blog.com/post/17/" target="_blank" rel="noopener">一键脚本</a><br><a href="https://blog.csdn.net/hpf247/article/details/79534979" target="_blank" rel="noopener">Chrome代理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前两天，我的酸酸乳(SSR)服务器被墙了，于是我查询资料在VPS上搭建了&lt;code&gt;V2Ray&lt;/code&gt;平台来科学上网。V2Ray更像是一个工具箱，集成了多种多样的协议和功能：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更完善的协议&lt;/strong&gt;：V2Ray 使用了新的自行研发的 VMess 协议，改正了 Shadowsocks一些已有的缺点，更难被墙检测到；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更强大的性能&lt;/strong&gt;: 网络性能更好，具体数据可以看 V2Ray &lt;a href=&quot;https://steemit.com/cn/@v2ray/3cjiux&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更丰富的功能&lt;/strong&gt;：以下是部分V2Ray的功能：&lt;ul&gt;
&lt;li&gt;mKCP:KCP 协议在 V2Ray 上的实现，不必另行安装 kcptun&lt;/li&gt;
&lt;li&gt;动态端口：动态改变通信的端口，对抗对长时间大流量端口的限速封锁&lt;/li&gt;
&lt;li&gt;路由功能：可以随意设定指定数据包的流向，去广告、反跟踪都可以&lt;/li&gt;
&lt;li&gt;传出代理：看名字可能不太好理解，其实差不多可以称之为多重代理。类似于 Tor 的代理&lt;/li&gt;
&lt;li&gt;数据包伪装：类似于 Shadowsocks-rss 的混淆，另外对于 mKCP 的数据包也可伪装，伪装常见流量，令识别更困难&lt;/li&gt;
&lt;li&gt;WebSocket 协议：可以 PaaS 平台搭建V2Ray，通过 WebSocket 代理。也可以通过它使用 CDN 中转，抗封锁效果更好&lt;/li&gt;
&lt;li&gt;Mux:多路复用，进一步提高科学上网的并发性能
    
    </summary>
    
      <category term="服务器" scheme="http://percysu.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="V2Ray" scheme="http://percysu.com/tags/V2Ray/"/>
    
      <category term="科学上网" scheme="http://percysu.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>CMake + OpenCV3.4.1 + VS2017静态编译</title>
    <link href="http://percysu.com/2018/05/19/CMake_OpenCV/"/>
    <id>http://percysu.com/2018/05/19/CMake_OpenCV/</id>
    <published>2018-05-19T11:25:00.000Z</published>
    <updated>2018-10-22T18:33:04.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote><p>最近在做毕业设计的过程中，想要在未安装OpenCV环境的机器上运行我的OpenCV+MFC代码。但是从OpenCV3.1开始官方默认使用动态库的形式发布。我想使用静态库通过静态链接来将所用到的库链接进exe文件中，所以进行了OpenCV源码的静态编译。</p></blockquote><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p><strong>CMake</strong>:<a href="https://cmake.org/" target="_blank" rel="noopener">https://cmake.org/</a></p><p><strong>OpenCV</strong>:<a href="https://opencv.org/releases.html" target="_blank" rel="noopener">https://opencv.org/releases.html</a></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="1-安装OpenCV，并找到源码"><a href="#1-安装OpenCV，并找到源码" class="headerlink" title="1.安装OpenCV，并找到源码"></a>1.安装OpenCV，并找到源码</h2><p>安装OpenCV就不讲了，源码在安装目录的<strong>sources</strong>文件夹中<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_140611.png" alt=""><br><a id="more"></a></p><h2 id="2-运行CMake"><a href="#2-运行CMake" class="headerlink" title="2.运行CMake"></a>2.运行CMake</h2><p>进入CMake安装目录，运行<code>/bin/cmake-gui.exe</code>，填写相关参数，包括：<font color="#ff9900">OpenCV源码目录</font> 和<font color="#ff9900">OpenCV.sln工程的导出目录</font><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_181217.png" alt=""></p><p>点击<code>Configure</code></p><p>第一次导出时需要设置后面用来编译此OpenCV.sln工程的VS的版本，这里我用的是VS 2017：<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_175538.png" alt=""></p><font color="#0099ff">注意：这里要不要选Win 64要看你VS下的配置信息，Debug x64 和 Release x64下选择带”Win 64”的选项，Debug win32 和 Release win32选择不带”Win 64”的选项</font><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_181032.png" alt=""><br>OpenCV的源码中的CMAKE文件默认编译动态库，默认勾选BUILD_SHARED_LIBS选项，编译静态库时只需要取消该选项即可，这也是编译静态库和动态库的在设置上唯一差别。</p><font color="0099ff"><br>&gt; 划重点：强烈建议去掉<strong>BUILD_EXAMPLES</strong>，<strong>BUILD_TESTS</strong>，<strong>BUILD_PERF_TESTS</strong>这个三个选项(这三个选项默认勾选)，否则静态编译的示例程序非常大。</font><p>然后再点击<code>Configure</code>，如果出现红色背景，则表示出错，再<code>Configure</code>，直到不报错就点击<code>Generate</code>就完成了。</p><h2 id="3-打开OpenCV-sln，编译生成Debug和Release库"><a href="#3-打开OpenCV-sln，编译生成Debug和Release库" class="headerlink" title="3.打开OpenCV.sln，编译生成Debug和Release库"></a>3.打开OpenCV.sln，编译生成Debug和Release库</h2><p>在文件输出目录找到<strong>OpenCV.sln</strong>,打开，选择编译版本是<code>Debug</code>还是<code>Release</code>,建议两个版本都编译一次。<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_182209.png" alt=""></p><blockquote><p>点击x64旁边的下拉菜单，打开配置管理器，默认情况下,<code>IANSTALL</code>项目是没打勾的，一定记得打上，不然待会配置时怎么都找不到install这个文件夹，也就找不到include,opencv,opencv2。Release(Debug)切换到Debug(Release)模式下，需重新打勾。</p></blockquote><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_182920.png" alt=""></p><p>选择<code>生成</code> –&gt; <code>重新生成解决方案</code></p><p>找到CMakeTargets中的INSTALL，然后右键选择“仅限于项目”–&gt;“仅生成INSTALL”：<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_183738.png" alt=""></p><h2 id="4-在Visual-Studio中配置生成的OpenCV库文件"><a href="#4-在Visual-Studio中配置生成的OpenCV库文件" class="headerlink" title="4.在Visual Studio中配置生成的OpenCV库文件"></a>4.在Visual Studio中配置生成的OpenCV库文件</h2><p><code>项目</code> –&gt; <code>XX(项目名)属性</code><br>要想静态链接，必须要设置<code>&quot;MFC的使用：在静态库中使用MFC&quot;</code>和<code>&quot;C/C++ --&gt; 代码生成 --&gt; 运行库：/MT(Debug版本为：/MTD)&quot;</code><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184405.png" alt=""><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184435.png" alt=""></p><h3 id="Release版本"><a href="#Release版本" class="headerlink" title="Release版本"></a>Release版本</h3><p><strong>VC++目录&gt;包含目录：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\Su\OpenCV3_4_1\Static\install\include</span><br><span class="line">D:\Su\OpenCV3_4_1\Static\install\include\opencv</span><br><span class="line">D:\Su\OpenCV3_4_1\Static\install\include\opencv2</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184512.png" alt=""></p><p><strong>VC++目录&gt;库目录：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Su\OpenCV3_4_1\Static\install\x64\vc15\staticlib</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184536.png" alt=""></p><p><strong>链接器&gt;输入&gt;附加依赖项：</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">IlmImf.lib</span><br><span class="line">ippicvmt.lib</span><br><span class="line">ippiw.lib</span><br><span class="line">ittnotify.lib</span><br><span class="line">libjasper.lib</span><br><span class="line">libjpeg.lib</span><br><span class="line">libpng.lib</span><br><span class="line">libprotobuf.lib</span><br><span class="line">libtiff.lib</span><br><span class="line">libwebp.lib</span><br><span class="line">opencv_calib3d341.lib</span><br><span class="line">opencv_core341.lib</span><br><span class="line">opencv_dnn341.lib</span><br><span class="line">opencv_features2d341.lib</span><br><span class="line">opencv_flann341.lib</span><br><span class="line">opencv_highgui341.lib</span><br><span class="line">opencv_imgcodecs341.lib</span><br><span class="line">opencv_imgproc341.lib</span><br><span class="line">opencv_ml341.lib</span><br><span class="line">opencv_objdetect341.lib</span><br><span class="line">opencv_photo341.lib</span><br><span class="line">opencv_shape341.lib</span><br><span class="line">opencv_stitching341.lib</span><br><span class="line">opencv_superres341.lib</span><br><span class="line">opencv_video341.lib</span><br><span class="line">opencv_videoio341.lib</span><br><span class="line">opencv_videostab341.lib</span><br><span class="line">zlib.lib</span><br></pre></td></tr></table></figure></p><h3 id="Debug版本"><a href="#Debug版本" class="headerlink" title="Debug版本"></a>Debug版本</h3><p><strong>VC++目录&gt;包含目录：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\Su\OpenCV3_4_1\Static\install\include</span><br><span class="line">D:\Su\OpenCV3_4_1\Static\install\include\opencv</span><br><span class="line">D:\Su\OpenCV3_4_1\Static\install\include\opencv2</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184512.png" alt=""></p><p><strong>VC++目录&gt;库目录：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Su\OpenCV3_4_1\Static\install\x64\vc15\staticlib</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184536.png" alt=""></p><p><strong>链接器&gt;输入&gt;附加依赖项：</strong><br>(Debug版本带’d’,Release不带)<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">IlmImfd.lib</span><br><span class="line">ippicvmt.lib</span><br><span class="line">ippiwd.lib</span><br><span class="line">ittnotifyd.lib</span><br><span class="line">libjasperd.lib</span><br><span class="line">libjpegd.lib</span><br><span class="line">libpngd.lib</span><br><span class="line">libprotobufd.lib</span><br><span class="line">libtiffd.lib</span><br><span class="line">libwebpd.lib</span><br><span class="line">opencv_calib3d341d.lib</span><br><span class="line">opencv_core341d.lib</span><br><span class="line">opencv_dnn341d.lib</span><br><span class="line">opencv_features2d341.lib</span><br><span class="line">opencv_flann341.lib</span><br><span class="line">opencv_highgui341d.lib</span><br><span class="line">opencv_imgcodecs341d.lib</span><br><span class="line">opencv_imgproc341d.lib</span><br><span class="line">opencv_ml341d.lib</span><br><span class="line">opencv_objdetect341d.lib</span><br><span class="line">opencv_photo341d.lib</span><br><span class="line">opencv_shape341d.lib</span><br><span class="line">opencv_stitching341d.lib</span><br><span class="line">opencv_superres341d.lib</span><br><span class="line">opencv_video341d.lib</span><br><span class="line">opencv_videoio341d.lib</span><br><span class="line">opencv_videostab341d.lib</span><br><span class="line">zlibd.lib</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_184609.png" alt=""></p><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>调试即可，如果出现：<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20180519_191859.png" alt=""><br>只需要在<code>附加依赖项</code>第一项中加入<code>nafxcw.lib</code>即可(必须为第一项)</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>静态链接将库文件加载进exe文件中，虽然增加了exe文件的大小，但是却使exe不需要携带大量的dll运行。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;最近在做毕业设计的过程中，想要在未安装OpenCV环境的机器上运行我的OpenCV+MFC代码。但是从OpenCV3.1开始官方默认使用动态库的形式发布。我想使用静态库通过静态链接来将所用到的库链接进exe文件中，所以进行了OpenCV源码的静态编译。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;CMake&lt;/strong&gt;:&lt;a href=&quot;https://cmake.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cmake.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenCV&lt;/strong&gt;:&lt;a href=&quot;https://opencv.org/releases.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://opencv.org/releases.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;h2 id=&quot;1-安装OpenCV，并找到源码&quot;&gt;&lt;a href=&quot;#1-安装OpenCV，并找到源码&quot; class=&quot;headerlink&quot; title=&quot;1.安装OpenCV，并找到源码&quot;&gt;&lt;/a&gt;1.安装OpenCV，并找到源码&lt;/h2&gt;&lt;p&gt;安装OpenCV就不讲了，源码在安装目录的&lt;strong&gt;sources&lt;/strong&gt;文件夹中&lt;br&gt;&lt;img src=&quot;http://ox33lq08p.bkt.clouddn.com/snipaste20180519_140611.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://percysu.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="OpenCV" scheme="http://percysu.com/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>搭建SSR服务器附带锐速加速</title>
    <link href="http://percysu.com/2018/03/12/SSR/"/>
    <id>http://percysu.com/2018/03/12/SSR/</id>
    <published>2018-03-11T18:59:45.000Z</published>
    <updated>2018-10-22T18:40:08.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p><code>SSR</code>是<code>shadowsocks</code>的升级版，加入了参数混淆的功能，在这里我们只使用它的代理功能。</p><h1 id="购买VPS服务器"><a href="#购买VPS服务器" class="headerlink" title="购买VPS服务器"></a>购买VPS服务器</h1><p>个人推荐：<a href="https://www.vultr.com/" target="_blank" rel="noopener">VULTR</a><br>你也可以选择：<a href="https://www.bwh1.net/" target="_blank" rel="noopener">搬瓦工</a></p><h2 id="账户注册"><a href="#账户注册" class="headerlink" title="账户注册"></a>账户注册</h2><p>直接：<code>Create Account</code>注册账号。</p><h2 id="充值"><a href="#充值" class="headerlink" title="充值"></a>充值</h2><p>进入”<code>Billing</code>“选“<code>Alipay</code>”就可以使用支付宝进行充值。vultr的服务是按时间收费的，你当你租了服务器之后不管你用没用它都会扣费。在这里，我充值了$25。</p><h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>点击“<strong>Servers</strong>”，然后点“<strong>+</strong>”号，选择服务器的类型。地区推荐选择“<strong>洛杉矶</strong>”，东京貌似不太好出IP。系统选择“<code>CentOS 6x64</code>”，服务就选<strong>$5/mo</strong>就行。点击“<strong>Deploy Now</strong>”，完成购买。</p><h2 id="查看服务器信息"><a href="#查看服务器信息" class="headerlink" title="查看服务器信息"></a>查看服务器信息</h2><p>进入“<strong>Server</strong>”，选择你的服务器进入，有自己服务器的详细信息。<br><img src="http://ox33lq08p.bkt.clouddn.com/111.png" alt=""><br><code>IP Address</code>:这就是你的ssr服务器的IP地址。<br><code>Pass Word</code>:这就是你进行ssh认证的密码。<br><a id="more"></a></p><h2 id="重要的一步"><a href="#重要的一步" class="headerlink" title="重要的一步"></a>重要的一步</h2><p>在控制台中ping自己得到的IP地址，看看能不能ping通。新机初始化的时候，可能ping不通，5min后还是ping不通进入<a href="http://ping.chinaz.com/" target="_blank" rel="noopener">http://ping.chinaz.com/</a>。输入自己ssr服务器的IP地址，如果国内的ping一片飘红，国外都能ping通，那么你十有八九就是被墙了。</p><h3 id="处理方法"><a href="#处理方法" class="headerlink" title="处理方法"></a>处理方法</h3><p>将自己的服务器销毁掉，重新购买服务器，建议多买几个服务器，配置不变，购买数量增加即可。然后挨个ping看看哪个IP能ping通。</p><h2 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h2><p>Windows可通过<a href="http://www.ddooo.com/softdown/915.htm" target="_blank" rel="noopener">xshell4</a>或者<a href="https://pan.baidu.com/s/1jI0T5Fw" target="_blank" rel="noopener">putty</a>进行ssh远程登录。<br>我用的是mac自带的ssh客户端。<br><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-03-12_09-49-45.png" alt=""></p><h2 id="SSR安装"><a href="#SSR安装" class="headerlink" title="SSR安装"></a>SSR安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh</span><br><span class="line">chmod +x shadowsocksR.sh</span><br><span class="line">./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log</span><br></pre></td></tr></table></figure><p><strong>分别</strong>输入以上这三行代码。</p><blockquote><p>Please input password for ShdawsocksR:</p></blockquote><p>会让你设置密码，看自己喜好。</p><blockquote><p>Please input port for ShadowsockR[1-65535]:</p></blockquote><p>会让你设置端口号。</p><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h2><p>耐心等待安装，安装完会显示SSR的配置信息，记下来。<br><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-03-12_09-57-55.png" alt=""><br>至此，你的SSR服务器就搭建好了。你可以通过服务器的IP，端口和密码去科学上网了。</p><h1 id="非必要"><a href="#非必要" class="headerlink" title="非必要"></a>非必要</h1><h2 id="多用户配置"><a href="#多用户配置" class="headerlink" title="多用户配置"></a>多用户配置</h2><p>你的ssr服务器现在是让用户都通过同一个密码和端口使用。如果你想让多个端口对应多个密码，就要进行多用户配置。<br>ssh登录你的ssr服务器，输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/shadowsocks.json</span><br></pre></td></tr></table></figure></p><p>说一句如果你觉得每次ssh时密码输入很麻烦，这个密码可以改的，当ssh连接上后，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure></p><p>修改登录密码。<br>跑题了。<br><strong>多用户配置实例：</strong><br><figure class="highlight"><figcaption><span>/etc/shadowsocks.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line"><span class="attr">"server_ipv6"</span>: <span class="string">"[::]"</span>,</span><br><span class="line"><span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line"><span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line"><span class="attr">"port_password"</span>:&#123;</span><br><span class="line">    "8989":"password1",     #这里是8989端口对应一个密码</span><br><span class="line">    "8990":"password2",</span><br><span class="line">    "8991":"password3"</span><br><span class="line">&#125;,</span><br><span class="line">"timeout":300,</span><br><span class="line">"method":"aes-256-cfb",</span><br><span class="line">"protocol": "origin",</span><br><span class="line">"protocol_param": "",</span><br><span class="line">"obfs": "plain",</span><br><span class="line">"obfs_param": "",</span><br><span class="line">"redirect": "",</span><br><span class="line">"dns_ipv6": false,</span><br><span class="line">"fast_open": false,</span><br><span class="line">"workers": 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><p>这时候，你新添加的端口还无法使用。<br>关闭防火墙：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br></pre></td></tr></table></figure></p><p><strong>在IPtables防火墙中开放特定端口:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp –-dport 1314 -j ACCEPT</span><br></pre></td></tr></table></figure></p><p>这里的1314是我随便输的，这里的值是你shadowsocks.json里多用户配置里的端口号。</p><p>然后保存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.d/init.d/iptables save</span><br></pre></td></tr></table></figure></p><p>开启防火墙：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables start</span><br></pre></td></tr></table></figure></p><h2 id="ssr加速-破解版锐速）"><a href="#ssr加速-破解版锐速）" class="headerlink" title="ssr加速(破解版锐速）"></a>ssr加速(破解版锐速）</h2><p>首先要说的是<strong>锐速不支持Openvz</strong>！VPS最好选的是KVM。<br>ssh登录进ssr服务器</p><h3 id="安装锐速"><a href="#安装锐速" class="headerlink" title="安装锐速"></a>安装锐速</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure><font color="#0099ff">如果提示内核版本不对，就要更换内核。</font><h4 id="如何更换内核"><a href="#如何更换内核" class="headerlink" title="如何更换内核"></a>如何更换内核</h4><p>CentOS6更换内核：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</span><br></pre></td></tr></table></figure></p><p>分别输入以上的命令就可以更换内核。</p><p>CentOS7更换内核：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://soft.91yun.org/ISO/Linux/CentOS/kernel/kernel-3.10.0-229.1.2.el7.x86_64.rpm --force</span><br></pre></td></tr></table></figure></p><p>更新完需重启机器,输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></p><p>重启后重新ssh连接再输入锐速加速指令。</p><h2 id="修改SSH端口"><a href="#修改SSH端口" class="headerlink" title="修改SSH端口"></a>修改SSH端口</h2><p>SSH默认端口为22，容易被人破解和攻击，建议修改，此处系统为<em>CentOS6</em><br>1.编辑配置文件：默认端口为22，并且被注释掉，去掉#，将22改为一个五位数，如：22222<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-10-08_12-37-02.png" alt=""><br><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-10-08_12-50-53.png" alt=""></p><p>2.在防火墙上开放端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 22222 -j ACCEPT</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables-save</span><br></pre></td></tr></table></figure><p>3.检查端口是否开放<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -nL --line-number</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/Snipaste_2018-10-08_12-38-40.png" alt=""></p><p>4.重启SSH服务，并重新连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/sshd restart</span><br></pre></td></tr></table></figure></p><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><p>Windows、Android、Mac版：<a href="https://pan.baidu.com/s/1GmrHCpSjJTCQkEjkpsiuTg" target="_blank" rel="noopener">下载</a> 密码: 17gq<br>IOS:美区账号查找:”<strong>Potatso Lite</strong>“或者”<strong>Shadowrocket</strong>(PP助手上也有)”</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;&lt;code&gt;SSR&lt;/code&gt;是&lt;code&gt;shadowsocks&lt;/code&gt;的升级版，加入了参数混淆的功能，在这里我们只使用它的代理功能。&lt;/p&gt;
&lt;h1 id=&quot;购买VPS服务器&quot;&gt;&lt;a href=&quot;#购买VPS服务器&quot; class=&quot;headerlink&quot; title=&quot;购买VPS服务器&quot;&gt;&lt;/a&gt;购买VPS服务器&lt;/h1&gt;&lt;p&gt;个人推荐：&lt;a href=&quot;https://www.vultr.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;VULTR&lt;/a&gt;&lt;br&gt;你也可以选择：&lt;a href=&quot;https://www.bwh1.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搬瓦工&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;账户注册&quot;&gt;&lt;a href=&quot;#账户注册&quot; class=&quot;headerlink&quot; title=&quot;账户注册&quot;&gt;&lt;/a&gt;账户注册&lt;/h2&gt;&lt;p&gt;直接：&lt;code&gt;Create Account&lt;/code&gt;注册账号。&lt;/p&gt;
&lt;h2 id=&quot;充值&quot;&gt;&lt;a href=&quot;#充值&quot; class=&quot;headerlink&quot; title=&quot;充值&quot;&gt;&lt;/a&gt;充值&lt;/h2&gt;&lt;p&gt;进入”&lt;code&gt;Billing&lt;/code&gt;“选“&lt;code&gt;Alipay&lt;/code&gt;”就可以使用支付宝进行充值。vultr的服务是按时间收费的，你当你租了服务器之后不管你用没用它都会扣费。在这里，我充值了$25。&lt;/p&gt;
&lt;h2 id=&quot;购买服务器&quot;&gt;&lt;a href=&quot;#购买服务器&quot; class=&quot;headerlink&quot; title=&quot;购买服务器&quot;&gt;&lt;/a&gt;购买服务器&lt;/h2&gt;&lt;p&gt;点击“&lt;strong&gt;Servers&lt;/strong&gt;”，然后点“&lt;strong&gt;+&lt;/strong&gt;”号，选择服务器的类型。地区推荐选择“&lt;strong&gt;洛杉矶&lt;/strong&gt;”，东京貌似不太好出IP。系统选择“&lt;code&gt;CentOS 6x64&lt;/code&gt;”，服务就选&lt;strong&gt;$5/mo&lt;/strong&gt;就行。点击“&lt;strong&gt;Deploy Now&lt;/strong&gt;”，完成购买。&lt;/p&gt;
&lt;h2 id=&quot;查看服务器信息&quot;&gt;&lt;a href=&quot;#查看服务器信息&quot; class=&quot;headerlink&quot; title=&quot;查看服务器信息&quot;&gt;&lt;/a&gt;查看服务器信息&lt;/h2&gt;&lt;p&gt;进入“&lt;strong&gt;Server&lt;/strong&gt;”，选择你的服务器进入，有自己服务器的详细信息。&lt;br&gt;&lt;img src=&quot;http://ox33lq08p.bkt.clouddn.com/111.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;code&gt;IP Address&lt;/code&gt;:这就是你的ssr服务器的IP地址。&lt;br&gt;&lt;code&gt;Pass Word&lt;/code&gt;:这就是你进行ssh认证的密码。&lt;br&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://percysu.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="科学上网" scheme="http://percysu.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="ShadowSocks" scheme="http://percysu.com/tags/ShadowSocks/"/>
    
  </entry>
  
  <entry>
    <title>Windows下输入正确密码无法进入的解决办法</title>
    <link href="http://percysu.com/2018/02/22/Windows_Passwd/"/>
    <id>http://percysu.com/2018/02/22/Windows_Passwd/</id>
    <published>2018-02-22T14:06:23.000Z</published>
    <updated>2018-10-21T15:47:18.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><blockquote><p>开机后输入密码无法进入桌面，<font color="red">显示无网络状态（右下角网络处为红叉）</font>，进入死循环重启，或者是显示<font color="red">其他用户，会出现异常的账户和密码输入框。</font></p></blockquote><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><blockquote><p>系统无法连接到sens服务导致。</p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="进入“安全模式”"><a href="#进入“安全模式”" class="headerlink" title="进入“安全模式”"></a>进入“安全模式”</h2><p>win7和win8都是开机按F8，但对于win10不适用。 </p><p>对于win10：<br><a id="more"></a></p><h3 id="能进到登录界面"><a href="#能进到登录界面" class="headerlink" title="能进到登录界面"></a>能进到登录界面</h3><p>如果能进系统到登录界面，按以下步骤可以进入“安全模式”：</p><ol><li>按住<code>“Shift”</code>，然后点击<code>电源按钮</code> -&gt; <code>重启</code></li><li>重启后进入蓝色界面，单击<code>疑难解答</code></li><li>点击<code>高级选项</code></li><li>点<code>启动设置</code></li><li>点击右下角的<code>启动</code>按钮，重启后选择<code>4</code>就进入了“安全模式”</li></ol><p>再给出能进入系统的进入安全模式的方法：</p><ol><li><code>win+r</code>会出现运行框，输入<code>msconfig</code></li><li>选择<code>引导</code>，将<code>安全引导</code>打上勾即可。（但要注意，如果要退出安全模式，需要在安全模式下，同样步骤将钩去掉）</li></ol><h3 id="不能进入系统"><a href="#不能进入系统" class="headerlink" title="不能进入系统"></a>不能进入系统</h3><p>很多时候电脑坏掉，需要在安全模式下进行查错解决，但是如何进入安全模式呢?</p><pre><code>在开机出现`微软`图标下面有转圈的小点时，立即关掉电源，如此两次，第三次启动时就进入安全模式了。</code></pre><h2 id="进入”命令提示符-管理员）“"><a href="#进入”命令提示符-管理员）“" class="headerlink" title="进入”命令提示符(管理员）“"></a>进入”命令提示符(管理员）“</h2><p><code>开始</code> -&gt; <code>所有应用</code> -&gt; <code>Windows系统</code> -&gt; <code>命令与提示符</code> -&gt; <code>右键，选以管理员方式运行</code></p><p>或者</p><p><code>win+s</code> -&gt; <code>输入cmd</code> -&gt; <code>在最佳匹配里的命令与提示符右键选以管理员方式运行</code></p><h2 id="输入命令"><a href="#输入命令" class="headerlink" title="输入命令"></a>输入命令</h2><p>在<code>C:\windows\system32&gt;</code>后面接着输入:<br><code>netsh winsock reset catalog</code>后按回车键。</p><p>这时会提示:“成功重置winsock目录,你必须重新启动计算机才能完成重置”，重启电脑后就可以正常使用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;开机后输入密码无法进入桌面，&lt;font color=&quot;red&quot;&gt;显示无网络状态（右下角网络处为红叉）&lt;/font&gt;，进入死循环重启，或者是显示&lt;font color=&quot;red&quot;&gt;其他用户，会出现异常的账户和密码输入框。&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;系统无法连接到sens服务导致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h1&gt;&lt;h2 id=&quot;进入“安全模式”&quot;&gt;&lt;a href=&quot;#进入“安全模式”&quot; class=&quot;headerlink&quot; title=&quot;进入“安全模式”&quot;&gt;&lt;/a&gt;进入“安全模式”&lt;/h2&gt;&lt;p&gt;win7和win8都是开机按F8，但对于win10不适用。 &lt;/p&gt;
&lt;p&gt;对于win10：&lt;br&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://percysu.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Windows" scheme="http://percysu.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows下使用GitHub+Hexo搭建个人博客</title>
    <link href="http://percysu.com/2017/12/18/Hexo_Blog/"/>
    <id>http://percysu.com/2017/12/18/Hexo_Blog/</id>
    <published>2017-12-18T15:46:41.000Z</published>
    <updated>2018-10-22T18:30:25.131Z</updated>
    
    <content type="html"><![CDATA[<p>首先，资料参考自<a href="http://blog.csdn.net/wx_jin/article/details/51027783" target="_blank" rel="noopener">http://blog.csdn.net/wx_jin/article/details/51027783</a>，我对其中有些内容进行了补充与修改，因为其中有些内容过时了，有些内容有纰漏。—特此说明</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js下载地址</a><br>可以通过node -v命令测试是否安装成功。<br>具体操作：<code>①win+r</code> –&gt;  <code>②cmd</code>  –&gt;  <code>③node -v</code><br>如果成功的话，是这样：<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171218_235417.png" alt="First"><br><strong>PS:<font color="ff0000">在这里我要安利一个软件，它可以用来代替<code>cmd</code>，这个软件叫做<code>cmder</code>，十分良心，附上下载地址：<a href="http://cmder.net/" target="_blank" rel="noopener">cmder下载地址</a></font></strong><br><a id="more"></a></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>下载地址：<a href="https://git-scm.com/" target="_blank" rel="noopener">Git下载地址</a><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_002403.png" alt="Second"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_002448.png" alt="Third"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_002637.png" alt="Fourth"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_002720.png" alt="Fifth"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_002741.png" alt="Sixth"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_002813.png" alt="Seventh"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_003140.png" alt="Eighth"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_003203.png" alt="Ninth"><br>可以通过git –-version的命令来测试git是否安装成功<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_092042.png" alt="Tenth"></p><h2 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h2><p>去Github官网注册即可。<br>注册完成之后添加SSH Key(教程在下面)。<br>这个 SSH Key是一个认证，让github识别绑定这台机器，允许这台机器提交。<br>进入自己机器的<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\OrangeSu(这里为你的用户名)</span><br></pre></td></tr></table></figure></p><p>看看该文件夹下有没有: <code>.ssh</code>文件夹<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_104323.png" alt="Eleventh"></p><p>下面就说下怎么配置SSH Key。 </p><h2 id="生成新的SSH-Key配置"><a href="#生成新的SSH-Key配置" class="headerlink" title="生成新的SSH Key配置"></a>生成新的SSH Key配置</h2><h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><p>在Git Bash执行代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"hzpengcheng@gmail.com"</span></span><br></pre></td></tr></table></figure></p><p>将邮箱改为你自己的邮箱。<br>成功后会生成两个文件<code>id_rsa</code>以及<code>id_rsa.pub</code></p><h3 id="添加SSH-Key到GitHub"><a href="#添加SSH-Key到GitHub" class="headerlink" title="添加SSH Key到GitHub"></a>添加SSH Key到GitHub</h3><p>在Git hub右上角，点击头像，选择 Settings -&gt; SSH and GPG keys -&gt; New SSH key<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_121039.png" alt="Twelfth"></p><blockquote><p>复制你的<code>id_rsa.pub</code>里的内容到”Key”中</p></blockquote><p>完成！</p><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p> 在本地新建一个文件夹，取名为Blog，文件右键，选择Git BashHere。<br>（如果没有，是因为你安装Git时没有选择添加右键的选项）<a href="https://www.zhihu.com/question/48091139/answer/109144599" target="_blank" rel="noopener">解决方法</a></p><p>输入指令安装hexo：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure></p><p>安装完成后，可在git bash中输入<code>hexo</code>测试是否安装成功。<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_124953.png" alt="Thirteenth"></p><h1 id="设置hexo"><a href="#设置hexo" class="headerlink" title="设置hexo"></a>设置hexo</h1><p>接着初始化Hexo：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo</span><br></pre></td></tr></table></figure></p><p>初始化成功会显示<code>Start blogging with Hexo!</code><br>这时在你刚才创建的Blog文件夹里面会多出一个hexo文件夹</p><p>进入hexo目录中，输入命令<code>npm install</code>，安装依赖文件以及部署形成文件<br>进入目录：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd hexo</span><br></pre></td></tr></table></figure></p><p>安装：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>部署：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_125249.png" alt="Fourteenth"></p><p>开启服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server                     #简写 hexo s</span><br></pre></td></tr></table></figure></p><p><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_125747.png" alt="Fifteenth"></p><p>打开浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以看到默认的博客(图片源于网络):<br><img src="http://ox33lq08p.bkt.clouddn.com/20160331183055832.png" alt="Sixteenth"></p><font color="ff0000">ps:</font><font color="0099ff"><code>hexo s</code>只是开启了本地的服务，只能在自己机子上的4000端口可以看见效果，并未发布到git hub上，用来本地预览功能。</font><h1 id="配置GitHubPage"><a href="#配置GitHubPage" class="headerlink" title="配置GitHubPage"></a>配置GitHubPage</h1><p>登录GitHub，点击”New repository”，新建仓库。<br>输入仓库名：你的GitHub名称.github.io<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_132108.png" alt="Seventeenth"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_132713.png" alt="Eighteenth"></p><font color="ff0000">ps:我看网上有人说创建名字一定要用你的github用户名，不然显示不出来。虽然我没试过，但是最好还是填你的用户名就好，免得出现不必要的错误。</font><h1 id="启用GitHubPage"><a href="#启用GitHubPage" class="headerlink" title="启用GitHubPage"></a>启用GitHubPage</h1><p>选择仓库中的”Settings”,找到”GitHub Pages”,在”Source”中选择<code>master branch</code>,然后点击<code>save</code><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_133540.png" alt="Nineteenth"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_133706.png" alt="Twentieth"></p><p>点击”save”后页面会自动刷新，再看”GitHub Pages”时，会新出现一行提示<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_133731.png" alt="Twenty-first"></p><p>点击链接，会出现<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_134319.png" alt="Twenty-second"></p><p>界面比较简陋，在”GitHub Pages”里面除了”Source”，还有一个”Theme Chooser”， 你可以在里面选择一个你喜欢的主题。<br>打开自己在github的静态网址，我的<a href="http://percysu.com/Percy.github.io/">http://percysu.com/Percy.github.io/</a>，你会发现，打开是你自己刚才选择静态站点模版。</p><h1 id="将本地hexo项目托管到GitHub"><a href="#将本地hexo项目托管到GitHub" class="headerlink" title="将本地hexo项目托管到GitHub"></a>将本地hexo项目托管到GitHub</h1><p><strong>打开修改hexo目录下配置文件_config.yml</strong><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171219_135300.png" alt="Twenty-third"><br>编辑最后面的deploy属性，加入代码：<br><figure class="highlight yml"><figcaption><span>/hexo/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repository:</span> <span class="string">git@github.com:PercySu/Percy.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><p>type使用是git<br>repository属性改成你的仓库的地址<br>分支branch填写master</p><font color="559900">注意:“冒号”后面要空一格再输入</font><h1 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h1><p>网站的配置文件，你可以在这里配置一些基本信息，这里列举部分关键配置：<br><figure class="highlight yml"><figcaption><span>/hexo/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">此行光明，亦复何言？</span> <span class="comment">#网站的标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">何不如笑傲风月，踏三山，伴红颜，此生无憾！</span> <span class="comment">#副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">世事一场大梦，人生几度秋凉？</span> <span class="comment">#描述</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">PercySu</span> <span class="comment">#作者信息</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.png</span> <span class="comment">#头像，图片位置在相应主题目录下的images</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span> <span class="comment">#中文简体</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">hzpengcheng@163.com</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span> <span class="comment">#配置主题，这里使用next主题</span></span><br><span class="line"><span class="attr">stylus:</span></span><br><span class="line"><span class="attr">  compress:</span> <span class="literal">true</span> <span class="comment">#自适应布局</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span> <span class="comment">#部署环境，基于hexo+githubpage,所以这里使用git。注意：不同版本的hexo，type有可能不同，3.x以后应使用git,具体参看官方文档</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:username/username.github.io.git</span> <span class="comment">#git仓库地址，替换成你的username即可，其他保持不变，后面会提到如何创建git仓库</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><p>自己根据自己的需要修改。</p><h1 id="安装hexo-deployer-git插件"><a href="#安装hexo-deployer-git插件" class="headerlink" title="安装hexo-deployer-git插件"></a>安装hexo-deployer-git插件</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h1 id="部署你本地的主题到github上"><a href="#部署你本地的主题到github上" class="headerlink" title="部署你本地的主题到github上"></a>部署你本地的主题到github上</h1><p>代码如下,每次修改本地文件都得执行一下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean                <span class="comment">#简写 hexo c</span></span><br><span class="line">hexo generator            <span class="comment">#简写 hexo g</span></span><br><span class="line">hexo deploy               <span class="comment">#简写 hexo d</span></span><br></pre></td></tr></table></figure></p><p><code>hexo clean</code> #清除缓存 网页正常情况下可以忽略此条命令<br><code>hexo g</code> #生成静态网页<br><code>hexo d</code> #开始部署</p><p>大功告成！</p><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>环境虽然已经搭建好了，但是这只是个框架而已，你还没有往里面填东西。你可以自己选择主题，写文章，自己定义自己的Style。</p><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>你得使用Markdown语法，很好学，不到半个小时你就能学会。<br><a href="http://blog.csdn.net/witnessai1/article/details/52551362" target="_blank" rel="noopener">Markdown语法手册</a><br><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">CmdMarkdown下载</a></p><h2 id="关于主题"><a href="#关于主题" class="headerlink" title="关于主题"></a>关于主题</h2><p>你可以从github上clone主题，进行个性化修改，我使用的是next主题<br><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="noopener">修改教程</a></p><h2 id="关于绑定域名"><a href="#关于绑定域名" class="headerlink" title="关于绑定域名"></a>关于绑定域名</h2><p><a href="http://blog.csdn.net/chwshuang/article/details/52350589" target="_blank" rel="noopener">教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，资料参考自&lt;a href=&quot;http://blog.csdn.net/wx_jin/article/details/51027783&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.csdn.net/wx_jin/article/details/51027783&lt;/a&gt;，我对其中有些内容进行了补充与修改，因为其中有些内容过时了，有些内容有纰漏。—特此说明&lt;/p&gt;
&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;h2 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js&quot;&gt;&lt;/a&gt;安装Node.js&lt;/h2&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Node.js下载地址&lt;/a&gt;&lt;br&gt;可以通过node -v命令测试是否安装成功。&lt;br&gt;具体操作：&lt;code&gt;①win+r&lt;/code&gt; –&amp;gt;  &lt;code&gt;②cmd&lt;/code&gt;  –&amp;gt;  &lt;code&gt;③node -v&lt;/code&gt;&lt;br&gt;如果成功的话，是这样：&lt;br&gt;&lt;img src=&quot;http://ox33lq08p.bkt.clouddn.com/snipaste20171218_235417.png&quot; alt=&quot;First&quot;&gt;&lt;br&gt;&lt;strong&gt;PS:&lt;font color=&quot;ff0000&quot;&gt;在这里我要安利一个软件，它可以用来代替&lt;code&gt;cmd&lt;/code&gt;，这个软件叫做&lt;code&gt;cmder&lt;/code&gt;，十分良心，附上下载地址：&lt;a href=&quot;http://cmder.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;cmder下载地址&lt;/a&gt;&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://percysu.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://percysu.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://percysu.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于VS Code报错“扩展主机意外终止”的解决办法</title>
    <link href="http://percysu.com/2017/10/01/VSC_Ext/"/>
    <id>http://percysu.com/2017/10/01/VSC_Ext/</id>
    <published>2017-10-01T05:33:41.000Z</published>
    <updated>2018-10-21T15:46:37.176Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>这是很久前遇到的问题了，写下来方便后面遇到同样问题的朋友参考下，因为我本人在百度和Google上查了很久才解决掉。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>一张图片足矣:<br><img src="http://ox33lq08p.bkt.clouddn.com/2986047206-58e741da31fe3_articlex.jpg" alt="1"></p><h2 id="解决线索"><a href="#解决线索" class="headerlink" title="解决线索"></a>解决线索</h2><p>最后在Github上找到了一些线索，就实践了下，结果意外地成功了，感谢微软的员工<strong>joaomoreno</strong>。附上他的解决方法：<a href="https://github.com/Microsoft/vscode/issues/24742" target="_blank" rel="noopener">链接</a><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_134831.png" alt="2"><br><a id="more"></a></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>我给出我最后的解决办法：<font color="#0099ff">重装git</font>。如果你发现自己没git，那就去下载一个。<a href="https://git-scm.com/" target="_blank" rel="noopener">下载地址</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>后面我偶然发现，在一个帖子里，有一个用户和我同样的操作，证明是可行的。<a href="https://segmentfault.com/q/1010000008978467/a-1020000008979253" target="_blank" rel="noopener">链接</a><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_135411.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;这是很久前遇到的问题了，写下来方便后面遇到同样问题的朋友参考下，因为我本人在百度和Google上查了很久才解决掉。&lt;/p&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;一张图片足矣:&lt;br&gt;&lt;img src=&quot;http://ox33lq08p.bkt.clouddn.com/2986047206-58e741da31fe3_articlex.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决线索&quot;&gt;&lt;a href=&quot;#解决线索&quot; class=&quot;headerlink&quot; title=&quot;解决线索&quot;&gt;&lt;/a&gt;解决线索&lt;/h2&gt;&lt;p&gt;最后在Github上找到了一些线索，就实践了下，结果意外地成功了，感谢微软的员工&lt;strong&gt;joaomoreno&lt;/strong&gt;。附上他的解决方法：&lt;a href=&quot;https://github.com/Microsoft/vscode/issues/24742&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://ox33lq08p.bkt.clouddn.com/snipaste20171001_134831.png&quot; alt=&quot;2&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://percysu.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="VS Code" scheme="http://percysu.com/tags/VS-Code/"/>
    
  </entry>
  
  <entry>
    <title>Atom插件安装问题</title>
    <link href="http://percysu.com/2017/10/01/Atom_Packages/"/>
    <id>http://percysu.com/2017/10/01/Atom_Packages/</id>
    <published>2017-10-01T04:09:34.000Z</published>
    <updated>2018-10-22T04:21:43.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Atom：优雅迷人之美"><a href="#Atom：优雅迷人之美" class="headerlink" title="Atom：优雅迷人之美"></a>Atom：优雅迷人之美</h2><ul><li><del>其实我更喜欢VS Code，不过，不要在意这些细节。</del><br><img src="http://ox33lq08p.bkt.clouddn.com/atom.png" alt="Atom"><a id="more"></a>Atom是由GitHub打造的先进开源的跨平台代码编辑器,它开源免费跨平台，并且整合 GIT 并提供类似 SublimeText 的包管理功能，支持插件扩展，可配置性非常高。Atom 代码编辑器支持 Windows、Mac、Linux 三大桌面平台，完全免费，并且已经在 GitHub 上开放了全部的源代码。可能，Atom在性能、启动速度、插件库方面与其他老牌代码编辑器还有一些差距，不过由于 Atom 是由 Github 维护的，它拥有非常强大的后台。并且那里有着大量极为优秀的编程爱好者，也是极客们的聚集地，相信在不久的将来Atom一定也会拥有不少新的插件包，而性能方面的缺点迟早也会被解决掉。PS：Atom一直以来让人诟病启动慢的问题在新版本的发行后已经得到了很好的解决。<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2>这篇文章主要是解决Atom插件安装时会遇到的问题。首先，先给出Atom的插件网站，<a href="https://atom.io/packages/" target="_blank" rel="noopener">点这里</a>，你可以在这个网站上下载你想要安装的插件。<h3 id="1-插件下载"><a href="#1-插件下载" class="headerlink" title="1.插件下载"></a>1.插件下载</h3><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_124245.png" alt="2"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_124323.png" alt="3"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_124350.png" alt="4"><h3 id="2-插件安装"><a href="#2-插件安装" class="headerlink" title="2.插件安装"></a>2.插件安装</h3>然后将下载下来的.zip文件解压，解压后的文件夹放在<font color="#0099ff">C://用户//（你的用户名）//.atom//packages</font>里面，然后启动Atom即可。<br><strong><em>ps:还有一种方式，不用下载插件，直接在Atom里面进行：</em></strong><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_125601.png" alt="5"><br>想要安装<span style="border-bottom:2px dashed red;">中文插件</span>，搜索<font color="#ff0000">“atom-simplified-chinese-menu”</font><h3 id="3-可能遇到的问题"><a href="#3-可能遇到的问题" class="headerlink" title="3.可能遇到的问题"></a>3.可能遇到的问题</h3>如果遇到下图类似的问题:<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_130425.png" alt="6"><br>第一条横线是你出错的<font color="#ff0000">插件名</font>;第二条横线是<font color="#ff0000">缺少的部件</font>。<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4></li></ul><ol><li>cd到你的插件包里面：这里假设出问题的包是”activate-power-mode”<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171001_131218.png" alt="7"></li><li>执行<font color="#ff0000"><span style="border-bottom:2px dashed red;"> npm install lodash.random </span></font><br>成功的话，重启Atom即可。<font color="#00ff00">如果不能执行npm命令，那么你需要下载Node.js:</font><a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载Node.js</a>。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Atom：优雅迷人之美&quot;&gt;&lt;a href=&quot;#Atom：优雅迷人之美&quot; class=&quot;headerlink&quot; title=&quot;Atom：优雅迷人之美&quot;&gt;&lt;/a&gt;Atom：优雅迷人之美&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;其实我更喜欢VS Code，不过，不要在意这些细节。&lt;/del&gt;&lt;br&gt;&lt;img src=&quot;http://ox33lq08p.bkt.clouddn.com/atom.png&quot; alt=&quot;Atom&quot;&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://percysu.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="Atom" scheme="http://percysu.com/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title>VS Code配置Python开发环境</title>
    <link href="http://percysu.com/2017/09/29/VSC_Py/"/>
    <id>http://percysu.com/2017/09/29/VSC_Py/</id>
    <published>2017-09-29T11:15:57.000Z</published>
    <updated>2018-10-22T18:36:59.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="必读"><a href="#必读" class="headerlink" title="必读"></a>必读</h3><ul><li>要知道，VS Code推荐一个项目以文件夹方式打开，所以你的配置都是针对一个文件夹而言的。也就是说，如果你重新创建了一个文件夹来存放.py的文件，那么你就要重新配置task.json 和 launch.json文件。<del>如果你有简便的方法请告诉我。</del><h3 id="配置Python开发环境"><a href="#配置Python开发环境" class="headerlink" title="配置Python开发环境"></a>配置Python开发环境</h3></li></ul><ol><li>点击<font color="#ff0000">扩展</font>,搜索<font color="#0099ff">python</font>,选择第一个，点击<font color="#0099ff">安装</font>。<a id="more"></a></li><li>配置python路径： <font color="#0099fe" 左上角菜单="" --=""> 文件 –&gt; 首选项 –&gt; 设置 –&gt;</font>(此时会出现左右两栏，左边是默认设置，右边是用户设置，我们要在用户设置中输入来覆盖默认的设置)，在<font color="#ff0000">搜索栏</font>中输入<font color="#0099ff">pythonpath</font>,从左边复制粘贴到右边，将pythonpath中的值改为你的python的绝对路径：<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171218_203204.png" alt="second"></li><li>打开一个文件夹，创建一个python文件，随便写点代码，按<font color="#ff0000"><strong>Ctrl + Shift + b</strong></font>运行程序。这时候会提示<font color="#ff0000"><strong><span style="border-bottom:2px dashed red;">配置生成任务</span></strong></font>。选择<font color="#0099ff">运行任意外部命令菜单</font>。<br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171218_204153.png" alt="third"><br><img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171218_204213.png" alt="fourth"></li><li>在打开的 <font color="#ff0000">task.json</font>文件中改为：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class="line">  // for the documentation about the tasks.json format</span><br><span class="line">  "version": "2.0.0",</span><br><span class="line">  "command": "python",</span><br><span class="line">  "isShellCommand": true,</span><br><span class="line">  "args": ["$&#123;file&#125;"],</span><br><span class="line">  "showOutput": "always",</span><br><span class="line">  "options": &#123;</span><br><span class="line">    "env":&#123;</span><br><span class="line">      "PYTHONIOENCODING": "UTF-8"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>再<font color="#ff0000">Ctrl + Shift +b</font>运行程序即可。</p><h3 id="若想调试，配置交互式环境"><a href="#若想调试，配置交互式环境" class="headerlink" title="若想调试，配置交互式环境"></a>若想调试，配置交互式环境</h3><p>  选择调试，在<font color="#0099ff">下拉菜单</font>（现在为空）里选择<font color="#ff0000">添加配置</font>,会生成<font color="#ff0000"><strong><em>launch.json</em></strong></font>文件，保存关闭,下拉菜单会出现多个选项，一般选择：<font color="#009900"><br>  ①python（不能接受输入）<br>  ②Intergrated Terminal/Console<br>  ③External Terminal/Console<br>  </font><br>  <img src="http://ox33lq08p.bkt.clouddn.com/snipaste20171218_211318.png" alt="fifth"><br>当选择<font color="#009900">②Intergrated Terminal/Console</font>时，对<font color="#ff0000">launch.json</font>进行配置，<font color="#ff0000"><em>找到”name”:”Intergrated Terminal/Console”这一项，将”cwd”里的值改为”${workspaceRoot}”即可</em></font>。</p><p>参考资料：<a href="https://jingyan.baidu.com/article/00a07f38503a2b82d028dc26.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/00a07f38503a2b82d028dc26.html</a><br>         <a href="https://www.zhihu.com/question/49799276" target="_blank" rel="noopener">https://www.zhihu.com/question/49799276</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;必读&quot;&gt;&lt;a href=&quot;#必读&quot; class=&quot;headerlink&quot; title=&quot;必读&quot;&gt;&lt;/a&gt;必读&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;要知道，VS Code推荐一个项目以文件夹方式打开，所以你的配置都是针对一个文件夹而言的。也就是说，如果你重新创建了一个文件夹来存放.py的文件，那么你就要重新配置task.json 和 launch.json文件。&lt;del&gt;如果你有简便的方法请告诉我。&lt;/del&gt;&lt;h3 id=&quot;配置Python开发环境&quot;&gt;&lt;a href=&quot;#配置Python开发环境&quot; class=&quot;headerlink&quot; title=&quot;配置Python开发环境&quot;&gt;&lt;/a&gt;配置Python开发环境&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;点击&lt;font color=&quot;#ff0000&quot;&gt;扩展&lt;/font&gt;,搜索&lt;font color=&quot;#0099ff&quot;&gt;python&lt;/font&gt;,选择第一个，点击&lt;font color=&quot;#0099ff&quot;&gt;安装&lt;/font&gt;。
    
    </summary>
    
      <category term="环境搭建" scheme="http://percysu.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="VS Code" scheme="http://percysu.com/tags/VS-Code/"/>
    
      <category term="Python" scheme="http://percysu.com/tags/Python/"/>
    
  </entry>
  
</feed>
